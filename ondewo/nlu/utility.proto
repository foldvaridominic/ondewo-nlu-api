// Copyright 2018 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Modifications Copyright 2020 ONDEWO GmbH
// Licensed under the ONDEWO GmbH license, Version 1.0 (the "License");
// you must not use this file except in compliance with the License.
// You must obtain a copy of the License at
// office@ondewo.com
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package ondewo.nlu;

import "ondewo/nlu/intent.proto";
import "ondewo/nlu/entity_type.proto";

option cc_enable_arenas = true;
option csharp_namespace = "Google.Cloud.Dialogflow.V2";
option go_package = "google.golang.org/genproto/googleapis/cloud/dialogflow/v2;dialogflow";
option java_multiple_files = true;
option java_outer_classname = "UtilityProto";
option java_package = "com.google.cloud.dialogflow.v2";
option objc_class_prefix = "DF";

// This is collection of utility endpoints, intended to language-independent operations,
// such as code checks, regex checks, etc.
service Utility {
    // Holds a collection of utility functions

    // Cleans all intent training phrases and entity annotations of parent
    rpc CleanAllIntents(CleanAllIntentsRequest) returns (CleanAllIntentsResponse);

    // Cleans single intent training phrases and entity annotations
    rpc CleanIntent(CleanIntentRequest) returns (CleanIntentResponse);

    // Cleans all entity types of parent
    rpc CleanAllEntityTypes(CleanAllEntityTypesRequest) returns (CleanAllEntityTypesResponse);

    // Cleans entity type
    rpc CleanEntityType(CleanEntityTypeRequest) returns (CleanEntityTypeResponse);

    // Creates new training phrases corresponding to intent specified by its intent display name
    rpc AddTrainingPhrases(AddTrainingPhrasesRequest) returns (AddTrainingPhrasesResponse);

    // Creates new training phrases corresponding to intent specified by its intent display name from csv file
    rpc AddTrainingPhrasesFromCSV(AddTrainingPhrasesFromCSVRequest) returns (AddTrainingPhrasesResponse);
}

// The request to clean the all intents.
message CleanAllIntentsRequest {
    // Required. The agent to list all intents from.
    // Format: `projects/<Project ID>/agent`.
    string parent = 1;

    // Optional. The language to list training phrases, parameters and rich
    // messages for. If not specified, the agent's default language is used.
    // [More than a dozen
    // languages](https://dialogflow.com/docs/reference/language) are supported.
    // Note: languages must be enabled in the agent before they can be used.
    string language_code = 2;

    // Optional. Characters to be recognized as special characters for cleaning.
    // Overrides the default: '.,;!?:'
    string special_characters = 3;

    // Optional. List of substring that shall not be cleaned/deleted.
    // Example: ['St.', 'U.S.', 'sys.', '24.12.', 'Nr.', 'TelNr.']
    // Default = None
    repeated string substring_white_list = 4;

    // Required. Whether or not to actually keep the changes/apply them to the database
    bool keep_changes = 5;

    // Optional. Options for the cleaning of the training phrases.
    TrainingPhraseCleanerOptions training_phrase_cleaner_options = 6;

    // Optional. Options for re-annotation of entities (default = REANNOTATE_NEVER)
    ReannotateEntitiesOptions reannotate_entities_options = 7;

    // Optional. Number of threads used to accomplish the task
    int32 number_of_workers = 8;
}


// Response corresponding to the CleanAllIntents Request
message CleanAllIntentsResponse {
    // Required. The agent to list all intents from.
    // Format: `projects/<Project ID>/agent`.
    string parent = 1;

    // Optional. The language to list training phrases, parameters and rich
    // messages for. If not specified, the agent's default language is used.
    // [More than a dozen
    // languages](https://dialogflow.com/docs/reference/language) are supported.
    // Note: languages must be enabled in the agent before they can be used.
    string language_code = 2;

    // Required. List of updates performed on intents
    repeated Intent cleaned_intents = 3;

    // Optional. List of updates applied to intents
    repeated IntentUpdate intent_update_list = 4;

}

// The request message to clean a single intents.
message CleanIntentRequest {

    // Required. The agent to list all intents from.
    // Format: `projects/<Project ID>/agent`.
    string parent = 1;

    // Required. The name of the intent.
    string intent_name = 2;

    // Optional. The language to list training phrases, parameters and rich
    // messages for. If not specified, the agent's default language is used.
    // [More than a dozen
    // languages](https://dialogflow.com/docs/reference/language) are supported.
    // Note: languages must be enabled in the agent before they can be used.
    string language_code = 3;

    // Optional. Characters to be recognized as special characters for cleaning.
    // Overrides the default: '.,;!?:'
    string special_characters = 4;

    // Optional. List of substring that shall not be cleaned/deleted.
    // Example: ['St.', 'U.S.', 'sys.', '24.12.', 'Nr.', 'TelNr.']
    // Default = None
    repeated string substring_white_list = 5;

    // Required. Whether or not to actually keep the changes/apply them to the database
    bool keep_changes = 6;

    // Optional. Options for the cleaning of the training phrases.
    TrainingPhraseCleanerOptions training_phrase_cleaner_options = 7;

    // Optional. Options for re-annotation of entities (default = REANNOTATE_NEVER)
    ReannotateEntitiesOptions reannotate_entities_options = 8;

}

// The response message to clean a single intents.
message CleanIntentResponse {

    // Required. The agent to list all intents from.
    // Format: `projects/<Project ID>/agent`.
    string parent = 1;

    // Required. The name of the intent.
    string intent_name = 2;

    // Optional. The language to list training phrases, parameters and rich
    // messages for. If not specified, the agent's default language is used.
    // [More than a dozen
    // languages](https://dialogflow.com/docs/reference/language) are supported.
    // Note: languages must be enabled in the agent before they can be used.
    string language_code = 3;

    // Required. Cleaned Intent
    Intent cleaned_intent = 4;

    // Optional. Updates applied to intent
    IntentUpdate intent_update = 5;
}


// Options for cleaning the training phrases
message TrainingPhraseCleanerOptions {
    // Whether or not to delete repeated whitespaces
    bool delete_repeated_whitespaces = 1;

    // Whether of not to delete leading special characters
    bool delete_leading_special_characters = 2;

    // Whether of not to delete trailing special characters
    bool delete_trailing_special_characters = 3;
}

// Lists entity re-annotation options
enum ReannotateEntitiesOptions {
    // Never re-annotate training phrases
    REANNOTATE_NEVER = 0;
    // Always re-annotate training phrases
    REANNOTATE_ALWAYS = 1;
    // Re-annotate training phrases if there are no annotations
    REANNOTATE_IF_EMPTY = 2;
    // Re-annotate if training phrases have been deleted
    REANNOTATE_AFTER_DELETION = 3;
    // Re-annotate if there are no annotations or if training phrases have been deleted
    REANNOTATE_IF_EMPTY_OR_AFTER_DELETION = 4;
}

// Message to keep track of updated strings
message StringUpdate {
    // New version of the string
    string new = 1;
    // Old version of the string
    string old = 2;
}

// Stores updates applied to an intent
message IntentUpdate {
    // Message to track the updates made to a training phrase
    message TrainingPhraseUpdate {
        // Stores updates of training phrases
        StringUpdate training_phrase_update = 1;

        // Stores updates of entity strings
        repeated StringUpdate entity_updates = 2;

        // Stores re-annotated entity strings
        repeated string entities_reannotated = 3;

        // Will be switched to True if at least one update has been performed
        bool contains_update_variable = 4;
    }

    // The display name of the intent
    string intent_display_name = 1;

    // List of the updated training phrases
    repeated TrainingPhraseUpdate training_phrase_update_list = 2;

    // List of the deleted parameters
    repeated string deleted_parameters = 3;
}


// Stores updates applied to an entity type
message EntityTypeUpdate {
    // Stores updates applied to an entity
    message EntityUpdate {
        // Updates made to the entity value
        StringUpdate entity_value_update = 1;
        // Updates made to the entity synonyms
        repeated StringUpdate entity_synonym_updates = 2;
    }
    // The entity type name
    string entity_type_name = 1;
    // List of the updated entities
    repeated EntityUpdate values_update_list = 2;

}

// Request to clean the entity types
message CleanAllEntityTypesRequest {

    // Required. The agent to list all intents from.
    // Format: `projects/<Project ID>/agent`.
    string parent = 1;

    // Optional. The language to list training phrases, parameters and rich
    // messages for. If not specified, the agent's default language is used.
    // [More than a dozen
    // languages](https://dialogflow.com/docs/reference/language) are supported.
    // Note: languages must be enabled in the agent before they can be used.
    string language_code = 2;

    // Optional. Characters to be recognized as special characters for cleaning.
    // Overrides the default: '.,;!?:'
    string special_characters = 3;

    // Optional. List of substring that shall not be cleaned/deleted.
    // Example: ['St.', 'U.S.', 'sys.', '24.12.', 'Nr.', 'TelNr.']
    repeated string substring_white_list = 4;

    // Optional. Entity type that contain more than max_entity_count_update entities will
    // not be cleaned. Relevant for auto-generated entity values (e.g. City Names)
    // Default = 10000
    int32 max_entity_count_update = 5;

    // Optional. List of strings or regexes. Entity types will be deleted if their display
    // name matches an element of this list
    // Example: ['sys.ignore.'] -> would delete entity types with display names sys.ignore.*
    repeated string forbidden_entity_type_patterns = 6;

    // Required. Whether or not to actually keep the changes/apply them to the database
    bool keep_changes = 7;

    // Optional. Number of threads used to accomplish the task
    int32 number_of_workers = 8;
}

// Response from entity type cleaner
message CleanAllEntityTypesResponse {
    // Required. The agent to list all intents from.
    // Format: `projects/<Project ID>/agent`.
    string parent = 1;

    // Optional. The language to list training phrases, parameters and rich
    // messages for. If not specified, the agent's default language is used.
    // [More than a dozen
    // languages](https://dialogflow.com/docs/reference/language) are supported.
    // Note: languages must be enabled in the agent before they can be used.
    string language_code = 2;

    // Required. List of updated entity types
    repeated EntityType cleaned_entity_types = 3;

    // Optional. List of updated entity types
    repeated EntityType deleted_entity_types = 4;

    // Optional. List of updates performed on entity types
    repeated EntityTypeUpdate entity_type_updates = 5;

    // Optional. List of the deleted entity types
    repeated EntityTypeUpdate entity_type_deletions = 6;
}

// Request to clean a single entity type
message CleanEntityTypeRequest {

    // Required. The agent to list all intents from.
    // Format: `projects/<Project ID>/agent`.
    string parent = 1;

    // Required. The name of the entity_type
    string entity_type_name = 2;

    // Optional. The language to list training phrases, parameters and rich
    // messages for. If not specified, the agent's default language is used.
    // [More than a dozen
    // languages](https://dialogflow.com/docs/reference/language) are supported.
    // Note: languages must be enabled in the agent before they can be used.
    string language_code = 3;

    // Optional. Characters to be recognized as special characters for cleaning.
    // Overrides the default: '.,;!?:'
    string special_characters = 4;

    // Optional. List of substring that shall not be cleaned/deleted.
    // Example: ['St.', 'U.S.', 'sys.', '24.12.', 'Nr.', 'TelNr.']
    repeated string substring_white_list = 5;

    // Optional. Entity type that contain more than max_entity_count_update entities will
    // not be cleaned. Relevant for auto-generated entity values (e.g. City Names)
    // Default = 10000
    int32 max_entity_count_update = 6;

    // Required. Whether or not to actually keep the changes/apply them to the database
    bool keep_changes = 7;
}

// Response from entity type cleaner
message CleanEntityTypeResponse {

    // Required. The agent to list all intents from.
    // Format: `projects/<Project ID>/agent`.
    string parent = 1;

    // Required. The name of the entity type.
    string entity_type_name = 2;

    // Optional. The language to list training phrases, parameters and rich
    // messages for. If not specified, the agent's default language is used.
    // [More than a dozen
    // languages](https://dialogflow.com/docs/reference/language) are supported.
    // Note: languages must be enabled in the agent before they can be used.
    string language_code = 3;

    // Required. The cleaned entity type
    EntityType cleaned_entity_type = 4;

    // Optional. The updated entity type
    EntityTypeUpdate entity_type_update = 5;
}

// Request message to AddTrainingPhrase rpc
message AddTrainingPhrasesRequest {
    // Message that contains the new training phrase, together with the intent display name
    // and, optionally the entity annotations
    message TrainingPhraseForIntent {
        // Required. New training phrase to be added
        string training_phrase = 1;

        // Required. Corresponding display name of the intent
        string intent_display_name = 2;

        // Optional. The language to list training phrases, parameters and rich
        // messages for. If not specified, the agent's default language is used.
        // [More than a dozen
        // languages](https://dialogflow.com/docs/reference/language) are supported.
        // Note: languages must be enabled in the agent before they can be used.
        string language_code = 3;

        // Optional. Entity annotations
        repeated Intent.TrainingPhrase.Entity entities = 4;
    }

    // Required. The agent to list all intents from.
    // Format: `projects/<Project ID>/agent`.
    string parent = 1;

    // Optional. The language to list training phrases, parameters and rich
    // messages for. If not specified, the agent's default language is used.
    // [More than a dozen
    // languages](https://dialogflow.com/docs/reference/language) are supported.
    // Note: languages must be enabled in the agent before they can be used.
    string language_code = 2;

    // Required. List of training phrases to be added to the intent
    repeated TrainingPhraseForIntent training_phrase_list = 3;

    // Optional. Whether or not to extract entities for the new training phrases
    // Default is true
    bool extract_entities_for_training_phrases = 4;

    // Optional. Characters to be recognized as special characters for cleaning
    // the training phrases. Overrides the default: '.,;!?:'
    string special_characters = 5;

    // Optional. Options for the training phrase cleaner to override the default settings
    TrainingPhraseCleanerOptions training_phrase_cleaner_options = 6;

    // Optional. Number of threads used to accomplish the task
    int32 number_of_workers = 7;
}

// Response message to AddTrainingPhrase rpc
message AddTrainingPhrasesResponse {
    // Required. The agent to list all intents from.
    // Format: `projects/<Project ID>/agent`.
    string parent = 1;

    // Optional. The language to list training phrases, parameters and rich
    // messages for. If not specified, the agent's default language is used.
    // [More than a dozen
    // languages](https://dialogflow.com/docs/reference/language) are supported.
    // Note: languages must be enabled in the agent before they can be used.
    string language_code = 2;

    // Required. If something goes wrong, error messages will be conveyed via a repeated string
    repeated string error_messages = 3;

}

// Request message to AddTrainingPhraseFromCSV rpc
message AddTrainingPhrasesFromCSVRequest {
    // Required. The agent to list all intents from.
    // Format: `projects/<Project ID>/agent`.
    string parent = 1;

    // Optional. The language to list training phrases, parameters and rich
    // messages for. If not specified, the agent's default language is used.
    // [More than a dozen
    // languages](https://dialogflow.com/docs/reference/language) are supported.
    // Note: languages must be enabled in the agent before they can be used.
    string language_code = 2;

    // Required. List of training phrases to be added to the intent
    string training_phrase_csv_directory = 3;

    // Optional. Whether or not to extract entities for the new training phrases
    // Default is true
    bool extract_entities_for_training_phrases = 4;

    // Optional. Characters to be recognized as special characters for cleaning
    // the training phrases. Overrides the default: '.,;!?:'
    string special_characters = 5;

    // Optional. Options for the training phrase cleaner to override the default settings
    TrainingPhraseCleanerOptions training_phrase_cleaner_options = 6;

    // Optional. Number of threads used to accomplish the task
    int32 number_of_workers = 7;
}